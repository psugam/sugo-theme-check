(() => {
  // <stdin>
  console.log("This site was generated by Hugo using Sugo theme.");
  document.addEventListener("DOMContentLoaded", function() {
    const menuToggle = document.getElementById("menu-toggle");
    const mainMenu = document.getElementById("main-menu");
    if (menuToggle && mainMenu) {
      let updateMenuDisplay2 = function() {
        if (window.innerWidth <= 600) {
          mainMenu.classList.add("hide-menu");
          mainMenu.classList.remove("open");
        } else {
          mainMenu.classList.remove("hide-menu");
          mainMenu.classList.remove("open");
        }
      };
      var updateMenuDisplay = updateMenuDisplay2;
      updateMenuDisplay2();
      window.addEventListener("resize", updateMenuDisplay2);
      menuToggle.addEventListener("click", function() {
        mainMenu.classList.toggle("open");
        mainMenu.classList.toggle("hide-menu");
      });
      mainMenu.querySelectorAll("a").forEach((link) => {
        link.addEventListener("click", () => {
          if (window.innerWidth <= 600) {
            mainMenu.classList.remove("open");
            mainMenu.classList.add("hide-menu");
          }
        });
      });
    }
    const toggle = document.getElementById("darkmode-toggle");
    const icon = document.getElementById("darkmode-icon");
    if (!toggle || !icon) return;
    const body = document.body;
    function setIcon() {
      const isDark = body.classList.contains("darkmode");
      document.getElementById("icon-sun").style.display = isDark ? "none" : "inline";
      document.getElementById("icon-moon").style.display = isDark ? "inline" : "none";
    }
    if (localStorage.getItem("darkmode") === "true") {
      body.classList.add("darkmode");
    }
    setIcon();
    toggle.addEventListener("click", function() {
      body.classList.toggle("darkmode");
      localStorage.setItem("darkmode", body.classList.contains("darkmode"));
      setIcon();
    });
    const searchToggle = document.getElementById("search-toggle");
    const searchInput = document.getElementById("search-input");
    const searchResults = document.getElementById("search-results");
    let postsIndex = [];
    let searchLoaded = false;
    function closeSearch() {
      searchInput.value = "";
      searchInput.style.display = "none";
      searchResults.style.display = "none";
      searchResults.innerHTML = "";
      document.body.classList.remove("search-open");
    }
    function openSearch() {
      searchInput.style.display = "inline-block";
      searchInput.focus();
      document.body.classList.add("search-open");
      searchResults.style.display = "none";
      searchResults.innerHTML = "";
    }
    if (searchToggle && searchInput && searchResults) {
      searchToggle.addEventListener("click", function(e) {
        e.stopPropagation();
        if (searchInput.style.display === "none" || searchInput.style.display === "") {
          openSearch();
          if (!searchLoaded) {
            fetch("/index.json").then((r) => r.json()).then((data) => {
              postsIndex = data;
              searchLoaded = true;
            });
          }
        } else {
          closeSearch();
        }
      });
      searchInput.addEventListener("input", function() {
        const q = searchInput.value.trim().toLowerCase();
        if (!q || !postsIndex.length) {
          searchResults.style.display = "none";
          searchResults.innerHTML = "";
          return;
        }
        const results = postsIndex.filter(
          (post) => post.title.toLowerCase().includes(q)
        );
        const shown = results.slice(0, 5);
        if (results.length === 0) {
          searchResults.innerHTML = '<div class="no-results">No results found</div>';
        } else {
          let html = "<ul>" + shown.map(
            (post) => `<li><a href="${post.permalink}"><strong>${post.title}</strong></a></li>`
          ).join("") + "</ul>";
          if (results.length > 5) {
            html += `<div class="see-more-results"><a href="/search/?q=${encodeURIComponent(q)}">See more results</a></div>`;
          }
          searchResults.innerHTML = html;
        }
        searchResults.style.display = "block";
      });
      document.addEventListener("click", function(e) {
        if (!searchInput.contains(e.target) && !searchToggle.contains(e.target) && !searchResults.contains(e.target)) {
          closeSearch();
        }
      });
      document.addEventListener("keydown", function(e) {
        if (e.key === "Escape") closeSearch();
      });
    }
    var toc = document.querySelector(".toc");
    if (!toc) return;
    var tocCollapsed = localStorage.getItem("toc-collapsed") === "true";
    if (tocCollapsed) toc.classList.add("collapsed");
    if (!toc.querySelector(".toc-collapsible-toggle")) {
      var h2 = toc.querySelector("h2") || toc.firstElementChild;
      var tocToggleBtn = document.createElement("button");
      tocToggleBtn.className = "toc-collapsible-toggle";
      tocToggleBtn.type = "button";
      tocToggleBtn.innerText = h2 ? h2.textContent : "Table of Contents";
      if (h2) h2.style.display = "none";
      toc.insertBefore(tocToggleBtn, toc.firstChild);
    }
    var toggleBtn = toc.querySelector(".toc-collapsible-toggle");
    var tocList = toc.querySelector("ul");
    if (tocList) {
      tocList.classList.add("toc-list-collapsible");
    }
    toggleBtn.addEventListener("click", function() {
      toc.classList.toggle("collapsed");
      localStorage.setItem("toc-collapsed", toc.classList.contains("collapsed"));
    });
  });
})();
